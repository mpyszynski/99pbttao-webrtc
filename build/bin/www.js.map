{"version":3,"sources":["../../src/bin/www.js"],"names":["require","app","server","debug","http","port","normalizePort","process","env","PORT","set","listen","on","onError","onListening","val","parseInt","isNaN","error","syscall","bind","code","console","exit","addr","address"],"mappings":";;AAEA;;;;eAIcA,QAAQ,QAAR,C;IAARC,G,YAAAA,G;;gBACWD,QAAQ,QAAR,C;IAAXE,M,aAAAA,M;;AACN,IAAIC,QAAQH,QAAQ,OAAR,EAAiB,4BAAjB,CAAZ;AACA,IAAII,OAAOJ,QAAQ,MAAR,CAAX;;AAEA;;;;AAIA,IAAIK,OAAOC,cAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,MAAlC,CAAX;AACAR,IAAIS,GAAJ,CAAQ,MAAR,EAAgBL,IAAhB;;AAEA;;;;AAIA;;AAEA;;;;AAIAH,OAAOS,MAAP,CAAcN,IAAd;AACAH,OAAOU,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACAX,OAAOU,EAAP,CAAU,WAAV,EAAuBE,WAAvB;;AAEA;;;;AAIA,SAASR,aAAT,CAAuBS,GAAvB,EAA4B;AAC1B,MAAIV,OAAOW,SAASD,GAAT,EAAc,EAAd,CAAX;;AAEA,MAAIE,MAAMZ,IAAN,CAAJ,EAAiB;AACf;AACA,WAAOU,GAAP;AACD;;AAED,MAAIV,QAAQ,CAAZ,EAAe;AACb;AACA,WAAOA,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED;;;;AAIA,SAASQ,OAAT,CAAiBK,KAAjB,EAAwB;AACtB,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;;AAED,MAAIE,OAAO,OAAOf,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAFd;;AAIA;AACA,UAAQa,MAAMG,IAAd;AACE,SAAK,QAAL;AACEC,cAAQJ,KAAR,CAAcE,OAAO,+BAArB;AACAb,cAAQgB,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACED,cAAQJ,KAAR,CAAcE,OAAO,oBAArB;AACAb,cAAQgB,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAML,KAAN;AAVJ;AAYD;;AAED;;;;AAIA,SAASJ,WAAT,GAAuB;AACrB,MAAIU,OAAOtB,OAAOuB,OAAP,EAAX;AACA,MAAIL,OAAO,OAAOI,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,KAAKnB,IAFnB;AAGAF,QAAM,kBAAkBiB,IAAxB;AACD","file":"www.js","sourcesContent":["\n\n/**\n * Module dependencies.\n */\n\nvar { app } = require('../app');\nvar { server } = require('../app');\nvar debug = require('debug')('express-boilerplate:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '8888');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\n// var server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n"]}